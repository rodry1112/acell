<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAMAAAAOusbgAAAABGdBTUEAALGPC/xhBQAAAGNQTFRF////
        AwEEAAAAwMDAa2tr/Pz8WVhZ9fX18vLy+Pj4zs7O6+vrX19f4+PjDg0Os7OzSEhIjIyMLi4uk5OTISEh
        QUFBU1NThISE19fXqampFhUWZmZmOTk5urq6np6eJyYnd3Z3ckzIIgAABHhJREFUaEPNm+FisjoMhjUM
        USoDURAEhPu/yq+FqFOhDZh4zvNjmxL7rqVN0wRXn1Ds8I8vU5bJ15V325XfXU7g4etvEdUqOOwBoMY3
        voPvnaCM2xOs17DH975BsdFdhQtoXa1cFfi2OAetahSNbP/7EPl4SRKVDj19oP+P0zHCy2IUr7I9WjsL
        0UIGb1TXALAR7PW0bt/rGM3YKX6ndTUARzRkJsisunLKZ4euUW7QlpPIcoNvAAjsGp1bVysf0JqPLaHD
        pstozkdM0dXK7HfZPbV64Iz2bGyIwhnas9EShdlv8oUmvGYXtrvLB+zCxKFeA3dU4HLUN9h7/PNfTS7q
        OmYPeEui8A/as0F1mVe0Z2M8zHsD2IO+gCjMH2OTFjJs0JqN7ZrkM/nDroY20vzLqaHp8m+LIVWY+9wa
        UIXZoz3qPWY/x1A3CYX2bNBcpkB4uzIpDycSJ8aIEPxAh8aspARhiUMbIbIGEEkBuUMBSNGUF/eOzH9+
        GXBnBISSbVeXcIKG3CjHliwzpw32EBcysdSisk4vyeT10SIMFRpJsKsnlQFEE6nh5GDLJRQHppaUzPbw
        l3GPLbaE/5CPKEOOFyXxq9f7DFBJFwfCfuYenpXx9BBvzU8ZVDocUJr2Ln2vCvhSW5OmqAGGbqnDSSv2
        1OWQsD0CnGUKfoFuen0/k6m4StM0O4R4d02OVaYiUv6a4Z1MSPdhN8CeeUf2r1hYm3IUt6OVGfoA3/uc
        4qzv5dCwbnpsOIPHTq1N85hDW8V6St2b1Q23I8vm+Xyj7bsP77byNnqMn1odSyi97Zb6M4m32Kn4YWUW
        Dbb14O0kGo8Z6fXdLFteYT6mqoGXXNaYrsH0Gk3mgNXaMbSrQCPDddJOG1ZzT61BNt2caTC/hRtqYzec
        GXnuXEktPW8b5Suvs8kaZuafCMUt3ZkefDnNHOXpyGoBMCO9SSz1EKFnoFg7bLpMDXwrVl36XY6oJSYq
        UNO8p+s0Ohvq9KIWeujQwrHo/lALG3CijDWx3DIH2liPnRQ+hTKvfd5FPAAttm6B2XsMUHwI+2LqgRKb
        n2YvI+yu/EmMtBlrbH6SrYiuVnbFQNRqy1ycKRKZuaWFXV6TWJ+ejTNJwr9DDICrzCozqTUOFyI1qbWw
        PcCOCMIY1z6Blyy8nHteIZS1oP15g1DUdkxrwmoai1YJftbhNAmrCTZv89MnBOKQWKc15eyyUDi1npYp
        Y7ZQGGyJEZ/gPxYL21KOO0r9cOSJC8phyypMecoEEu+N5FNhkuNCn/EEXrLxufBC/p/Cf1KD3MDammeU
        iTENUFsdiMDBCYHc6jL9t28jMAGuymNgyegtR7dJKMQ1U0nMhZh1vqflX9TVaLOIm3byckZGU5V9zvgj
        cfN52JfKOqtGUOFx0/YfxoZm0H8MkrO39JkjVZRVZpL0GmzTxWDcJl3z6beC/Cgsu7rFFif/AbwKcEqr
        MuR7umpXeOUh18v8zrNcT10dY0bNJ1ThxeW5q7LTr+HS1sm+O1/LJixsu8ALq9U/fcM4bRl02U0AAAAA
        SUVORK5CYII=
</value>
  </data>
</root>